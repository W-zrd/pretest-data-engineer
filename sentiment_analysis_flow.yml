id: sentiment_analysis
namespace: rfdhaikal.wizz

inputs:
  - id: cleaned_file
    type: FILE

tasks:
  - id: sentiment_analysis
    type: io.kestra.plugin.scripts.python.Script
    inputFiles:
      input_csv: "{{ inputs.cleaned_file }}"
    
    beforeCommands:
      - pip install pandas
      - pip install matplotlib

    script: |
      import pandas as pd
      import matplotlib.pyplot as plt
      
      def sentiment(rating):
        if rating >= 4:
          return 'Positive'
        elif rating == 3:
          return 'Neutral'
        else:
          return 'Negative'
      
      df = pd.read_csv('{{ inputs.cleaned_file }}')
      df['sentiment'] = df['rating'].apply(sentiment)

      category = df.groupby(['category', 'sentiment']).size().unstack(fill_value=0)
      percentage = category.div(category.sum(axis=1), axis=0) * 100
      
      # visualisasi keseluruhan
      plt.figure(figsize=(10, 6))
      df['sentiment'].value_counts().plot(kind='bar', color=['green', 'gray', 'red'])
      plt.title('Overall Sentiment Distribution')
      plt.xlabel('Sentiment')
      plt.ylabel('Count')
      plt.tight_layout()
      plt.savefig('overall_sentiment_distribution.png')
      
      # visualisasi per-kategori
      plt.figure(figsize=(12, 6))
      percentage.plot(kind='bar', stacked=True)
      plt.title('Sentiment Distribution by Category')
      plt.xlabel('Category')
      plt.ylabel('Percentage')
      plt.legend(title='Sentiment', bbox_to_anchor=(1.05, 1), loc='upper left')
      plt.tight_layout()
      plt.savefig('category_sentiment_distribution.png')
      
      df.to_csv('sentiment_analysis.csv', index=False)
      percentage.to_csv('category_sentiment_analysis.csv')

    outputFiles:
      - 'sentiment_analysis.csv'
      - 'category_sentiment_analysis.csv'
      - 'overall_sentiment_distribution.png'
      - 'category_sentiment_distribution.png'